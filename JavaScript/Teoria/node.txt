Node.js:

- Ambiente para execução de código JavaScript, ou seja, execução de JavaScript em um ambiente que não seja o Front da Web.
- O Node.js por utilizar o JavaScript possui desde o seu nascimento uma arquitetura não-bloqueante baseada em eventos.
- A arquitetura do JavaScript é dividida basicamente em três partes: Call Stack (responsável por empilhar as chamadas de funções), Callback Queue (responsável por empilhar os callbacks) e Event Loop (resposável para verificar se algum evento assicrono foi disparado e assim executando sua respectiva CallBack.
- Arquitetura não bloqueante de thread única ou sigle thread.
- A arquitetura do Node.js foi contruída para não travar sua aplicação enquanto sua regra de negócio é processada.
- As linguagens convencionais são multithread, fazendo com que seja necessário  que o usuário espere que uma thread termine para abrir espaço para uma nova thread. Para evitar o gargalo de acesso, como solução seria necessário a aquisição de novos servidores, gerando mais custo para o cliente.
- Se tornar ideal para aplicação de I/O intenso, ou seja, entrada e saída de dados intenso.
- Não é recomendado a utilização do Node para aplicação que se utiliza um alto custo de CPU.
- 
